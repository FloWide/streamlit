# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: '3.8' # Version range or exact version of a Python version to use, using SemVer's version range syntax
        architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest mypy-protobuf
        python -m pip install --upgrade cython
        python -m pip install --upgrade wheel
    - name: Install protobuf-compiler
      run: sudo apt-get install protobuf-compiler
    - name: Install cmake
      run: sudo apt-get install cmake
    - name: Install python3-numy
      run: sudo apt-get install python3-numpy
    - name: Run Makefile
      env:
        TOKEN: ${{ secrets.TOKEN }}
      run: make package
    - name: Upload the artifact
      uses: actions/upload-artifact@v1
      with:
        name: release_files
        path: lib/dist
    - name: Zip project # This would actually build your project, using zip for an example artifact
      run: |
        zip -r release_files.zip lib/dist
    - name: Get Short Hash
      id: slug
      run: echo "::set-output name=sha8::$(echo ${GITHUB_SHA} | cut -c1-8)"
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: latest/${{steps.slug.outputs.sha8 }}
        release_name: Release latest/${{steps.slug.outputs.sha8}}
        draft: false
        prerelease: false
    - name: Upload a Release Asset
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        # The URL for uploading assets to the release
        upload_url:  ${{steps.create_release.outputs.upload_url}}
        # The path to the asset you want to upload
        asset_path: ./release_files.zip
        # The name of the asset you want to upload
        asset_name: release_files.zip
        # The content-type of the asset you want to upload. See the supported Media Types here: https://www.iana.org/assignments/media-types/media-types.xhtml for more information
        asset_content_type: application/zip
